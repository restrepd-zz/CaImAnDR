%%
close all

%% choices
plot_raw=1;

%Choose dropc program
% 1 dropc_nsampler_piriform
% 2 dropcspm_hf before 2/23/2018
% 3 dropcspm_hf after 2/24/2018
dropc_program=3; 

bLoad = 0;

if bLoad == 1      
    %% Get the raw and inferred traces generated by drgCalmAn_script
[fnameca,pnameca,nCancel] = uigetfile({'*.mat'},'Select the output file from CalmAn...');
if nCancel
    inputPath = [pnameca,fnameca];
    pnameStart = pnameca;
    %save('timeCorr_cfg.mat','pnameStart','-append');
else
    error('Cancelled')
end


CalmAn_name=[pnameca fnameca];

load(CalmAn_name)
dt=1/options.fr;

[raw,inferred]=drgGetCAtraces(Yr,A_or,C_or,b2,f2,Cn,options);

if plot_raw==1
    traces=raw;
else
    traces=inferred;
end

sz_traces=size(traces);
no_traces=sz_traces(1);
no_images=sz_traces(2);
%% Get the timing from dropc

% Get dropcnsampler path and filename from user
[fname,pname,nCancel] = uigetfile({'*.mat'},'Select the dropcnsampler output file...');
if nCancel
    inputPath = [pname,fname];
    pnameStart = pname;
    %save('timeCorr_cfg.mat','pnameStart','-append');
else
    error('Cancelled')
end

load([pname fname])

end
%% Plot the traces

these_lines{1}='-b';
these_lines{2}='-r';
these_lines{3}='-m';
these_lines{8}='-g';
these_lines{5}='-y';
these_lines{6}='-k';
these_lines{7}='-c';
these_lines{4}='-k';

try
    close 1
catch
end

hFig1 = figure(1);
fontSize = 8;
set(hFig1, 'units','Inches','position',[1, 1, 6.25, 3]);
set(hFig1, 'PaperUnits','Inches', 'Paperosition',[1, 1, 6.25, 3]));
set(hFig1, 'DefaultAxesFontSize', fontSize);

axes('Position', [.05, .14, .93, .75]);

hold on

% Determine the y spacing of the traces
y_shift=1.2*(prctile(traces(:),95)-prctile(traces(:),5));

no_traces_2_plot = no_traces;
no_traces_2_plot = 15;

%Plot the event lines

switch dropc_program
    case 1
        for event=2:handles.dropcData.eventIndex
            plot([handles.dropcData.eventTime(event) handles.dropcData.eventTime(event)], [0 (no_traces_2_plot+1)*y_shift],...
                these_lines{handles.dropcData.odorNo(event)},'LineWidth',1)
        end
    case 2
        for event=1:handles.dropcData.allTrialIndex
            plot([handles.dropcData.allTrialTime(event)-2.5 handles.dropcData.allTrialTime(event)-2.5], [0 (no_traces_2_plot+1)*y_shift],...
                these_lines{handles.dropcData.odorType(event)},'LineWidth',1)
        end
    case 3
        pffft=1
        for epoch=1:handles.dropcData.epochIndex
            plot_epoch=(handles.dropcData.epochEvent(epoch)==1)||(handles.dropcData.epochEvent(epoch)==2)||...
                (handles.dropcData.epochEvent(epoch)==3);
            if plot_epoch
                if handles.dropcData.epochTypeOfOdor(epoch)==handles.dropcProg.splusOdor
                    plot([handles.dropcData.epochTime(epoch) handles.dropcData.epochTime(epoch)], [0 (no_traces_2_plot+1)*y_shift],...
                        '-r','LineWidth',1)
                else
                    plot([handles.dropcData.epochTime(epoch) handles.dropcData.epochTime(epoch)], [0 (no_traces_2_plot+1)*y_shift],...
                        '-b','LineWidth',1)
                end
            end
        end
end

%Plot the traces
time=[1:no_images]*dt;
for trNo=1:no_traces_2_plot
    plot(time,traces(trNo,:)+y_shift*(trNo-1),'-k','LineWidth',1)
end
    
xlabel('time (s)')
ylabel('deltaF/F')
set(gca, 'YTick', [])
set(gca, 'XLim', [min(time), max(time)]);
%title(fnameca(1:end-4))
%title('test', 'FontWeight', 'normal')

saveas(hFig1, 'f32_timetraces_cerrebellum.tif', 'tiff');
